[["index.html", "Manual equipe Inteligência re.green 1 Introdução", " Manual equipe Inteligência re.green construído pela equipe 1 Introdução Este é o manual da equipe de inteligência. Aqui definimos o que acreditamos e aplicamos em nosso cotidiano de trabalho. "],["a-diretoria-de-inteligência.html", "2 A diretoria de inteligência 2.1 Mandatos 2.2 Diversidade", " 2 A diretoria de inteligência 2.1 Mandatos Garantir que a inovação e agilidade estão se difundindo na empresa Melhorar o fluxo de informações nos níveis Estratégico e Operacional Nós aplicamos e difundimos o modo de pensar ágil e ferramentas quantitativas, para sermos mais competitivos, resilientes frente a incertezas, e melhores na tomada de decisão. Nós utilizamos a forma de pensar ágil, modelos científicos, análise de dados e soluções de tecnologia. 2.2 Diversidade Nos esforçamos para garantir que nossa equipe de esteja atenta a aspectos de diversidade, equidade, inclusão e competência cultural. Enxergamos a riqueza da própria vida na diversidade de opiniões e modos de ser, na multiplicidade de histórias e de escolhas pessoais Nós valorizamos a diversidade e estamos em constante aprendizado de como lidar com ela e, mais especialmente, aprimorá-la em nossa equipe. "],["convenções-de-padrão-de-código-dados-e-metadados.html", "3 Convenções de padrão de código, dados e metadados 3.1 Convenções de código 3.2 Repositórios git 3.3 Padrão de metadados 3.4 Entrega de dados", " 3 Convenções de padrão de código, dados e metadados Este documento fornece convenções de código e metadados recebidos pelo time de Data Analytics da re.green. Para informações adicionais, por favor, consulte Sara Mortara, Felipe Bocca ou Nathalia Monalisa. 3.1 Convenções de código 3.1.1 Geral A re.green segue o padrão de estilo de código de acordo com tidyverse. É possível utilizar o pacote styler para converter ao padrão definido. Seguir o padrão para os seguintes tópicos: Disposição do código Espaçamento Tamanho Máximo de Linha Organização interna Atribuição Uso de Aspas Comentários Convenção de nomes Nomes de Arquivos Nomes de Variáveis seguindo snake_case 3.1.2 Documentação de funções Para definição de funções, seguir o tópico Funtions do guia de estilo tidyverse. Toda função (incluindo funções auxiliares) deve ser documentada seguindo o padrão roxygen2. Ver exemplo no guia de estilo. Além disso, incluir controle de fluxo e tratamento de exceções utilizando tryCatch() para todas as funções (ver tópico 2.4.1). 3.2 Repositórios git 3.2.1 Geral Cada produto deve ter um repositório no github. Este repositório será parte da organização re.green no github e será dada autorização para inclusão de colaboradores(as) com papel de escrita. Os repositórios devem ser auto-contidos e sempre que possível usar caminhos relativos para ler e escrever dados. Caso exista dependência de dados que não estão versionados, explicitar. Acrescentar um README.md explicando o contexto do projeto e especificar quais bibliotecas (nomes do pacote e versão) e dados são necessários ao projeto. Para bibliotecas, deve-se utilizar o pacote renv para declaração de dependências e suas respectivas versões. Independente do fluxo git utilizado, adotar a nomenclatura main para o ramo principal e sempre mantê-lo atualizado. 3.2.2 Conteúdo do repositório Seguir o conteúdo e estrutura de pastas de acordo com a definição a seguir. . ├── README.md # contendo intruções gerais para uso ├── renv.lock* ├── data/ # dados de entrada com respectivo arquivo de metadados ├── script/ # pasta contendo scripts de exemplo de chamada das funções └── functions/ # pasta contendo funções de R documentadas, cada função em um arquivo separado * utilizar o pacote renv para criar o arquivo renv.lock que irá listar todas as dependências 3.3 Padrão de metadados 3.3.1 Dados tabulares Todo dado tabular deve conter um csv de descrição de metadados seguindo o padrão abaixo. Variável Descrição Tipo de dado Exemplo Gênero Gênero da espécie caractere Schinus Forma de vida Descrição da forma de vida da espécie caractere árvore; epífita 3.3.2 Dados espaciais Os arquivos espaciais, rasters e shapefiles, devem ter um arquivo de texto associado contendo informação de projeção (ESRI), resolução e escala. Todo shapefile deve ser exportado em formato gpkg. 3.4 Entrega de dados Para os conjuntos de dados que não serão versionados, a re.green irá fornecer um link de um bucket AWS para upload dos arquivos e seus respectivos metadados. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
